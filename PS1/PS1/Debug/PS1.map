Archive member included because of file (symbol)

d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                              d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o (exit)
d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                              Source/segDisplay.o (__do_copy_data)
d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                              PS1.o (__do_clear_bss)

Discarded input sections

 .data          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .text          0x00000000        0x0 PS1.o
 .data          0x00000000        0x0 PS1.o
 .bss           0x00000000        0x0 PS1.o
 .text          0x00000000        0x0 Source/eeprom.o
 .data          0x00000000        0x0 Source/eeprom.o
 .bss           0x00000000        0x0 Source/eeprom.o
 .text          0x00000000        0x0 Source/init.o
 .data          0x00000000        0x0 Source/init.o
 .bss           0x00000000        0x0 Source/init.o
 .text.initButton
                0x00000000        0x6 Source/init.o
 .text          0x00000000        0x0 Source/segDisplay.o
 .data          0x00000000        0x0 Source/segDisplay.o
 .bss           0x00000000        0x0 Source/segDisplay.o
 .text          0x00000000        0x0 Source/util.o
 .data          0x00000000        0x0 Source/util.o
 .bss           0x00000000        0x0 Source/util.o
 .text.led_ON   0x00000000       0x18 Source/util.o
 .text.led_OFF  0x00000000       0x1a Source/util.o
 .text          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
LOAD PS1.o
LOAD Source/eeprom.o
LOAD Source/init.o
LOAD Source/segDisplay.o
LOAD Source/util.o
START GROUP
LOAD d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a
LOAD d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
LOAD d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x30a
 *(.vectors)
 .vectors       0x00000000       0x68 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_20
                0x000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x000000a6       0x1c PS1.o
                0x000000a6                main
 .text.__vector_11
                0x000000c2       0x1e PS1.o
                0x000000c2                __vector_11
 .text.__vector_14
                0x000000e0       0x60 PS1.o
                0x000000e0                __vector_14
 .text.__vector_4
                0x00000140       0xa6 PS1.o
                0x00000140                __vector_4
 .text.eeprom_write
                0x000001e6       0x10 Source/eeprom.o
                0x000001e6                eeprom_write
 .text.eeprom_read
                0x000001f6        0xe Source/eeprom.o
                0x000001f6                eeprom_read
 .text.initDisplay
                0x00000204       0x1a Source/init.o
                0x00000204                initDisplay
 .text.initLeds
                0x0000021e        0xe Source/init.o
                0x0000021e                initLeds
 .text.initTimerB
                0x0000022c       0x28 Source/init.o
                0x0000022c                initTimerB
 .text.initTimerA
                0x00000254       0x1e Source/init.o
                0x00000254                initTimerA
 .text.initButtonISR
                0x00000272       0x1e Source/init.o
                0x00000272                initButtonISR
 .text.clear    0x00000290        0xe Source/segDisplay.o
                0x00000290                clear
 .text.display  0x0000029e       0x4e Source/segDisplay.o
                0x0000029e                display
 .text.togle_Led
                0x000002ec       0x1a Source/util.o
                0x000002ec                togle_Led
                0x00000306                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000306        0x0 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                0x00000306                _exit
                0x00000306                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000306        0x4 d:/atmel toolchain/avr8 gcc/native/3.4.1061/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000030a                _etext = .

.data           0x00800100        0xa load address 0x0000030a
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.segDisplay
                0x00800100        0xa Source/segDisplay.o
                0x00800100                segDisplay
 *(.gnu.linkonce.d*)
                0x0080010a                . = ALIGN (0x2)
                0x0080010a                _edata = .
                0x0080010a                PROVIDE (__data_end, .)

.bss            0x0080010a        0x2
                0x0080010a                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.count     0x0080010a        0x1 PS1.o
                0x0080010a                count
 .bss.buttonCount
                0x0080010b        0x1 Source/segDisplay.o
                0x0080010b                buttonCount
 *(COMMON)
                0x0080010c                PROVIDE (__bss_end, .)
                0x0000030a                __data_load_start = LOADADDR (.data)
                0x00000314                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010c        0x0
                0x0080010c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010c                PROVIDE (__noinit_end, .)
                0x0080010c                _end = .
                0x0080010c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 PS1.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 Source/eeprom.o
 .comment       0x00000000       0x31 Source/init.o
 .comment       0x00000000       0x31 Source/segDisplay.o
 .comment       0x00000000       0x31 Source/util.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x100
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x38 PS1.o
 .debug_aranges
                0x00000038       0x28 Source/eeprom.o
 .debug_aranges
                0x00000060       0x48 Source/init.o
 .debug_aranges
                0x000000a8       0x28 Source/segDisplay.o
 .debug_aranges
                0x000000d0       0x30 Source/util.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x73c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x2e5 PS1.o
 .debug_info    0x000002e5       0xdc Source/eeprom.o
 .debug_info    0x000003c1      0x16e Source/init.o
 .debug_info    0x0000052f      0x128 Source/segDisplay.o
 .debug_info    0x00000657       0xe5 Source/util.o

.debug_abbrev   0x00000000      0x47e
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1a6 PS1.o
 .debug_abbrev  0x000001a6       0x8b Source/eeprom.o
 .debug_abbrev  0x00000231       0xe1 Source/init.o
 .debug_abbrev  0x00000312       0xe3 Source/segDisplay.o
 .debug_abbrev  0x000003f5       0x89 Source/util.o

.debug_line     0x00000000      0x508
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x18e PS1.o
 .debug_line    0x0000018e       0xb7 Source/eeprom.o
 .debug_line    0x00000245      0x131 Source/init.o
 .debug_line    0x00000376       0xdd Source/segDisplay.o
 .debug_line    0x00000453       0xb5 Source/util.o

.debug_frame    0x00000000      0x21c
 *(.debug_frame)
 .debug_frame   0x00000000       0xf4 PS1.o
 .debug_frame   0x000000f4       0x34 Source/eeprom.o
 .debug_frame   0x00000128       0x74 Source/init.o
 .debug_frame   0x0000019c       0x3c Source/segDisplay.o
 .debug_frame   0x000001d8       0x44 Source/util.o

.debug_str      0x00000000      0x287
 *(.debug_str)
 .debug_str     0x00000000      0x1e9 PS1.o
                                0x21d (size before relaxing)
 .debug_str     0x000001e9       0x20 Source/eeprom.o
                                0x162 (size before relaxing)
 .debug_str     0x00000209       0x27 Source/init.o
                                0x19d (size before relaxing)
 .debug_str     0x00000230       0x37 Source/segDisplay.o
                                0x178 (size before relaxing)
 .debug_str     0x00000267       0x20 Source/util.o
                                0x14a (size before relaxing)

.debug_loc      0x00000000      0x2e5
 *(.debug_loc)
 .debug_loc     0x00000000      0x1d2 PS1.o
 .debug_loc     0x000001d2       0x24 Source/eeprom.o
 .debug_loc     0x000001f6       0x5f Source/init.o
 .debug_loc     0x00000255       0x4e Source/segDisplay.o
 .debug_loc     0x000002a3       0x42 Source/util.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0xb0
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x28 PS1.o
 .debug_ranges  0x00000028       0x18 Source/eeprom.o
 .debug_ranges  0x00000040       0x38 Source/init.o
 .debug_ranges  0x00000078       0x18 Source/segDisplay.o
 .debug_ranges  0x00000090       0x20 Source/util.o

.debug_macro
 *(.debug_macro)
OUTPUT(PS1.elf elf32-avr)
LOAD linker stubs
