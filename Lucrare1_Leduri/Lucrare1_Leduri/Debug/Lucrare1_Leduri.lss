
Lucrare1_Leduri.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000019e  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000030  00000000  00000000  000001ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000020b  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000011f  00000000  00000000  00000409  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000152  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000044  00000000  00000000  0000067c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000181  00000000  00000000  000006c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000041  00000000  00000000  00000841  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000020  00000000  00000000  00000882  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
  bc:	0c 94 a3 00 	jmp	0x146	; 0x146 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <pinInit>:
#define F_CPU 16000000UL
#include <util/delay.h>

void pinInit(void)
{
	DDRB |= (1 << DDB4) | (1 << DDB5) | (1 << DDB6) | (1 << DDB7);
  c4:	84 b1       	in	r24, 0x04	; 4
  c6:	80 6f       	ori	r24, 0xF0	; 240
  c8:	84 b9       	out	0x04, r24	; 4
	DDRC |= (1 << DDC6) | (1 << DDC7);
  ca:	87 b1       	in	r24, 0x07	; 7
  cc:	80 6c       	ori	r24, 0xC0	; 192
  ce:	87 b9       	out	0x07, r24	; 7
	DDRF |= (1 << DDF7);
  d0:	87 9a       	sbi	0x10, 7	; 16
  d2:	08 95       	ret

000000d4 <shiftLed500ms>:
}
void shiftLed500ms(void)
{
	uint8_t i = 0x00u;
	PORTB = 0x08u;
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	85 b9       	out	0x05, r24	; 5
  d8:	84 e0       	ldi	r24, 0x04	; 4
	while(i < 4)
	{
		
		PORTB = (PORTB << 1);
  da:	95 b1       	in	r25, 0x05	; 5
  dc:	99 0f       	add	r25, r25
  de:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	39 e6       	ldi	r19, 0x69	; 105
  e4:	98 e1       	ldi	r25, 0x18	; 24
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	30 40       	sbci	r19, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <shiftLed500ms+0x12>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <shiftLed500ms+0x1c>
  f0:	00 00       	nop
  f2:	81 50       	subi	r24, 0x01	; 1
}
void shiftLed500ms(void)
{
	uint8_t i = 0x00u;
	PORTB = 0x08u;
	while(i < 4)
  f4:	91 f7       	brne	.-28     	; 0xda <shiftLed500ms+0x6>
		PORTB = (PORTB << 1);
		i++;
		_delay_ms(500);
		
	}
	PORTB = 0x00u;
  f6:	15 b8       	out	0x05, r1	; 5
	PORTC |= (1 << PORTC6);
  f8:	46 9a       	sbi	0x08, 6	; 8
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	39 e6       	ldi	r19, 0x69	; 105
  fe:	88 e1       	ldi	r24, 0x18	; 24
 100:	21 50       	subi	r18, 0x01	; 1
 102:	30 40       	sbci	r19, 0x00	; 0
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <shiftLed500ms+0x2c>
 108:	00 c0       	rjmp	.+0      	; 0x10a <shiftLed500ms+0x36>
 10a:	00 00       	nop
	_delay_ms(500);
	PORTC &= ~(1 << PORTC6);
 10c:	46 98       	cbi	0x08, 6	; 8
	PORTC |= (1 << PORTC7);
 10e:	47 9a       	sbi	0x08, 7	; 8
 110:	9f ef       	ldi	r25, 0xFF	; 255
 112:	29 e6       	ldi	r18, 0x69	; 105
 114:	38 e1       	ldi	r19, 0x18	; 24
 116:	91 50       	subi	r25, 0x01	; 1
 118:	20 40       	sbci	r18, 0x00	; 0
 11a:	30 40       	sbci	r19, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <shiftLed500ms+0x42>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <shiftLed500ms+0x4c>
 120:	00 00       	nop
	_delay_ms(500);
	PORTC &= ~(1 << PORTC7);
 122:	47 98       	cbi	0x08, 7	; 8
	PORTF |= (1 << PORTF7);
 124:	8f 9a       	sbi	0x11, 7	; 17
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	99 e6       	ldi	r25, 0x69	; 105
 12a:	28 e1       	ldi	r18, 0x18	; 24
 12c:	81 50       	subi	r24, 0x01	; 1
 12e:	90 40       	sbci	r25, 0x00	; 0
 130:	20 40       	sbci	r18, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <shiftLed500ms+0x58>
 134:	00 c0       	rjmp	.+0      	; 0x136 <shiftLed500ms+0x62>
 136:	00 00       	nop
	_delay_ms(500);
	PORTF &= ~(1 << PORTF7);
 138:	8f 98       	cbi	0x11, 7	; 17
 13a:	08 95       	ret

0000013c <main>:
}

int main(void)
{
	pinInit();
 13c:	0e 94 62 00 	call	0xc4	; 0xc4 <pinInit>
	
    while(1)
    {
		shiftLed500ms();
 140:	0e 94 6a 00 	call	0xd4	; 0xd4 <shiftLed500ms>
 144:	fd cf       	rjmp	.-6      	; 0x140 <main+0x4>

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
